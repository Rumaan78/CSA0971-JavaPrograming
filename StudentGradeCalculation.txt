import java.util.Scanner;

class Student {
    private String subject;
    private int marks;
    
    public Student(String subject, int marks) {
        this.subject = subject;
        this.marks = marks;
    }
    
    public int getMarks() {
        return marks;
    }
}

class Result extends Student {
    private int total;
    private float aggregate;
    
    public Result(String subject, int marks) {
        super(subject, marks);
    }
    
    public void setTotal(int total) {
        this.total = total;
    }
    
    public void setAggregate(float aggregate) {
        this.aggregate = aggregate;
    }
    
    public void calculateTotal(Student[] students) {
        for (Student student : students) {
            total += student.getMarks();
        }
    }
    
    public void calculateAggregate() {
        aggregate = (float) total / 6;
    }
    
    public void displayResult() {
        System.out.println("Total= " + total);
        System.out.println("Aggregate = " + aggregate);
        if (aggregate > 75) {
            System.out.println("Class: DISTINCTION");
        } else if (aggregate >= 60 && aggregate <= 75) {
            System.out.println("Class: FIRST DIVISION");
        } else if (aggregate >= 50 && aggregate < 60) {
            System.out.println("Class: SECOND DIVISION");
        } else if (aggregate >= 40 && aggregate < 50) {
            System.out.println("Class: THIRD DIVISION");
        } else {
            System.out.println("Class: FAIL");
        }
    }
}

public class StudentGrades {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Student[] students = new Student[6];
        
        System.out.println("Enter the marks for 6 subjects:");
        for (int i = 0; i < 6; i++) {
            System.out.print("Enter the marks in subject " + (i + 1) + ": ");
            int marks = scanner.nextInt();
            students[i] = new Student("Subject " + (i + 1), marks);
        }
        
        Result result = new Result("Subject ", 80);
        result.calculateTotal(students);
        result.calculateAggregate();
        result.displayResult();
    }
}
